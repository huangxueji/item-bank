<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mypro.ssm.mapper.UserMapper">
    <resultMap id="userResultMap" type="user">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="phoneNum" column="phone_num"/>
        <result property="status" column="status"/>
    </resultMap>

    <resultMap id="userRolesResultMap" type="user">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="phoneNum" column="phone_num"/>
        <result property="status" column="status"/>
        <collection property="roles" ofType="role">
            <id property="id" column="role_id"/>
            <result property="roleName" column="role_name"/>
            <result property="roleDesc" column="role_desc"/>
            <collection property="permissions" ofType="permission">
                <id property="id" column="id"/>
                <result property="permissionName" column="permissionName"/>
                <result property="url" column="url"/>
            </collection>
        </collection>
    </resultMap>

    <sql id="table_columns">
		`id`,
		`username`,
		`password`,
		`email`,
		`phone_num`,
		`status`
    </sql>

    <sql id="entity_properties">
			#{id},
			#{username},
			#{password},
			#{email},
			#{phoneNum},
			#{status}
    </sql>

    <!--条件查询-->
    <sql id="where">
        <where>
            <if test="username != null and username != ''">and username = #{username}</if>
            <if test="password != null and password != ''">and password = #{password}</if>
            <if test="email != null and email != ''">and email = #{email}</if>
            <if test="phoneNum != null and phoneNum != ''">and phone_num = #{phoneNum}</if>
            <if test="status != null and status != ''">and status = #{status}</if>
        </where>
    </sql>

    <!-- 适用于主键自增类型 -->
    <insert id="insert" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        insert into `user`(
        <include refid="table_columns"/>
        )
        values (
        <include refid="entity_properties"/>
        )
    </insert>

    <insert id="insertSelective" parameterType="user" useGeneratedKeys="true" keyProperty="id">
        insert into `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone_num != null">
                phone_num,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id}
            </if>
            <if test="username != null">
                #{username}
            </if>
            <if test="password != null">
                #{password}
            </if>
            <if test="email != null">
                #{email}
            </if>
            <if test="phone_num != null">
                #{phone_num}
            </if>
            <if test="status != null">
                #{status}
            </if>
        </trim>
    </insert>
    <insert id="insertUserAndRole">
		insert into `user_role`( `user_id`,`role_id` )
		values(#{userId},#{roleId})
	</insert>

    <delete id="deleteById" parameterType="int">
        delete from `user`
        where id = #{id}
    </delete>

    <delete id="deleteByIds" parameterType="list">
        delete from `user`
        where id in
        <foreach item="item" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="delete" parameterType="user">
        delete from `user`
        <include refid="where"/>
    </delete>

    <delete id="deleteUserAndRole">
		delete from `user_role`
		WHERE `user_id` =#{userId}
	</delete>

    <update id="update" parameterType="user">
        update `user`
        <trim prefix="set" suffixOverrides=",">
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="phoneNum != null and phoneNum != ''">phone_num = #{phoneNum},</if>
            <if test="status != null and status != ''">status = #{status},</if>
        </trim>
        <where>id = #{id}</where>
    </update>

    <select id="find" resultMap="userResultMap">
        SELECT
        <include refid="table_columns"/>
        FROM `user`
        <include refid="where"/>
    </select>

    <select id="findAll" resultMap="userResultMap">
        select
        <include refid="table_columns"/>
        from `user`
    </select>

    <select id="findCount" resultType="java.lang.Long">
        SELECT count(1)
        FROM `user`
        <include refid="where"/>
    </select>

    <select id="findById" resultMap="userResultMap" parameterType="int">
        select
        <include refid="table_columns"/>
        from `user`
        where id = #{id}
    </select>

    <select id="findUserRoles" resultMap="userRolesResultMap">
		select
		u.`id` id,
		u.`username` username ,
		u.`password` password ,
		u.`email` email,
		u.`phone_num` phone_num,
		u.`status` status ,
		r.`id` role_id,
		r.`role_name` role_name,
		r.`role_desc` role_desc
		from `user` u
		LEFT JOIN `user_role` ur ON u.id = ur.user_id
		LEFT JOIN `role` r ON ur.role_id = r.id
	</select>

    <select id="findUserRolesPermissionsById" resultMap="userRolesResultMap">
		select
		u.`id` id,
		u.`username` username ,
		u.`password` password ,
		u.`email` email,
		u.`phone_num` phone_num,
		u.`status` status ,
		r.`id` role_id,
		r.`role_name` role_name,
		r.`role_desc` role_desc,
		p.`id` permission_id,
		p.`permission_name` permission_name,
		p.`url` url
		from `user` u
		LEFT JOIN `user_role` ur ON u.id = ur.user_id
		LEFT JOIN `role` r ON ur.role_id = r.id
		LEFT JOIN `role_permission` rp ON r.id = rp.role_id
		LEFT JOIN `permission` p ON rp.permission_id = p.id
		WHERE u.id = #{id}
	</select>

    <!-- 其他自定义SQL -->
</mapper>